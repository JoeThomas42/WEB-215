You must watch the class recording that demonstrates this project, as all of the point descriptions below are in general terms and purposefully omit detail. The point descriptions below are meant to act as general reminders of what is expected as was shown in the class demo.

FUNCTIONALITY
-------------
20 pts:
Retrieve 10 movies and render them to page with accurate header info and valid/accessible HTML
  -Note that the hardcoded OMBd Search heading and the search bar under it should remain static (though the search term entered in the form field and the checked state of the checkbox will change).
  -The only header information that should change is an H2 generated by JS and located between the H1 and search bar.
  -Load placeholder image for missing images
  -All generated HTML is free of WAVE and validation errors.

10 pts:
Retrieve a different 10 movies from different search term and render them to page, clearing out old results and updating header

5 pts:
Render friendly but accurate and descriptive message in header when API key is bad, clearing out any previous movies and header info

5 pts:
Save search term to persistent storage, keep saved term in search field, and keep checkbox checked

10 pts:
Load saved search term on page load, including header, search box/checkbox, and movies

5 pts:
Enable checkbox so that search can be saved or not. If unchecked, clear term from persistent storage. If checked, save term to persistent storage.

20 pts:
Intersection Observer to load all movies (10 at a time) so that all movies are rendered (not cleared as more movies render), observes the last movie on the page and stops observing once all movies have rendered

CODE STYLE
----------
5 pts:
Enforces strict mode

5 pts:
All functions have complete and accurate DocBlocks

5 pts:
JavaScript code is developer-friendly.
All generated HTML is free of WAVE and validation errors.

5 pts:
Code is clean of console statements and commented-out code

5 pts:
Code is appropriately modular and spread across multiple functions. No tasks are performed outside of functions. (Only global variable declarations and event listener binding may occur outside of functions.)
